name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
    paths:
      - '**.hpp'
      - '**.cpp'
      - '**.h'
      - '**.c'
      - '**CMakeLists.txt'
      - '.github/workflows/build.yml'
  pull_request:
    branches:
      - '*'
      - '*/*'
      - '**'
    paths:
      - '**.hpp'
      - '**.cpp'
      - '**.h'
      - '**.c'
      - '**CMakeLists.txt'
      - '.github/workflows/build.yml'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install CMake
      uses: lukka/get-cmake@v3.19.0

    - name: Install latest conan
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: Generate build files
      run: mkdir build && cd build && cmake .. -G "Visual Studio 16 2019" -A Win32 -T "ClangCL"

    - name: Build
      run: |
        cd build
        cmake --build . --config Debug
#  build-linux:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        submodules: recursive
#
#    - name: Setup Python
#      uses: actions/setup-python@v2
#
#    - name: Install CMake
#      uses: lukka/get-cmake@v3.19.0
#
#    - name: Install gcc/g++-multilib for linux & set clang
#      run: |
#        sudo apt-get update
#        sudo apt install -y gcc-multilib g++-multilib clang
#        echo "CC=/usr/bin/clang" >> $GITHUB_ENV
#        echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV
#
#    - name: Install latest conan
#      run: |
#        python -m pip install --upgrade pip
#        pip install conan
#
#    - name: Generate build files
#      run: mkdir build && cd build && cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_C_FLAGS=-m32
#
#    - name: Build
#      run: |
#        cd build
#        cmake --build . --config Debug
