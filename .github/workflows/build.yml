name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "dev"
    paths:
      - "**.hpp"
      - "**.cpp"
      - "**.h"
      - "**.c"
      - "**CMakeLists.txt"
      - ".github/workflows/build.yml"
  pull_request:
    branches:
      - "*"
      - "*/*"
      - "**"
    paths:
      - "**.hpp"
      - "**.cpp"
      - "**.h"
      - "**.c"
      - "**CMakeLists.txt"
      - ".github/workflows/build.yml"

jobs:
  build-windows:
    runs-on: [self-hosted, new-runner]

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install CMake
        uses: lukka/get-cmake@v.3.23.2

      - name: Install latest conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      - name: Generate build files
        run: |
          $env:OMP_BUILD_VERSION=$(git rev-list $(git rev-list --max-parents=0 HEAD) HEAD | Measure-Object -Line).Lines
          $env:OMP_BUILD_COMMIT=$(git rev-parse HEAD)
          mkdir build
          cd build
          cmake .. -A Win32 -T "ClangCL"

      - name: Build
        run: |
          cd build
          cmake --build . --config RelWithDebInfo

      - name: Create a snapshot
        shell: bash
        env:
          CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
        run: |
          version=$(git describe --always --tags)
          folder_name="open.mp-${version}"
          archive_name="open.mp-win-snapshot-${version}.tar.xz"
          cd build/Output/*
          mv Server "${folder_name}"
          tar -cJvf "${archive_name}" "${folder_name}"
          eval $(ssh-agent -s)
          echo "${CI_PRIVATE_KEY}" | ssh-add -
          echo "put ${archive_name}" | sftp -oStrictHostKeyChecking=accept-new omp-ci@tms-server.com:snapshots/

  build-linux:
    runs-on: [self-hosted, Linux, X64]

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
          fetch-depth: 0

      - name: Set ownership
        run: |
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD

      - name: Build
        run: |
          cd docker
          ./build.sh

      - name: Create a snapshot
        env:
          CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
        run: |
          version=$(git describe --always --tags)
          folder_name="open.mp-${version}"
          archive_name="open.mp-linux-snapshot-${version}.tar.xz"
          cd build/Output/*
          mv Server "${folder_name}"
          tar -cJvf "${archive_name}" "${folder_name}"
          eval $(ssh-agent -s)
          echo "${CI_PRIVATE_KEY}" | ssh-add -
          echo "put ${archive_name}" | sftp -oStrictHostKeyChecking=accept-new omp-ci@tms-server.com:snapshots/

  build-arm:
    runs-on: [self-hosted, Linux, ARM]

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}
          fetch-depth: 0

      - name: Generate build files
        run: |
          export CC=clang
          export CXX=clang++
          export OMP_BUILD_VERSION=$(git rev-list $(git rev-list --max-parents=0 HEAD) HEAD | wc -l)
          export OMP_BUILD_COMMIT=$(git rev-parse HEAD)
          mkdir build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCROSS_BUILD=1 -DCROSS_BUILD_ARCH=armv7 ..

      - name: Build
        run: |
          export CC=clang
          export CXX=clang++
          cd build
          ninja

      - name: Create a snapshot
        env:
          CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
        run: |
          version=$(git describe --always --tags)
          folder_name="open.mp-${version}"
          archive_name="open.mp-linux-snapshot-${version}-arm.tar.xz"
          cd build/Output/*
          mv Server "${folder_name}"
          tar -cJvf "${archive_name}" "${folder_name}"
          eval $(ssh-agent -s)
          echo "${CI_PRIVATE_KEY}" | ssh-add -
          echo "put ${archive_name}" | sftp -oStrictHostKeyChecking=accept-new omp-ci@tms-server.com:snapshots/
